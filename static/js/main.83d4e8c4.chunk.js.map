{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onActiveTab","selectedTab","find","tab","id","className","map","title","classNames","href","onClick","hendleClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAQMC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAEzE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAACH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBAEEF,UAAWG,IACT,CAAE,YAAaJ,IAAOH,EAAYG,KAEpC,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,kBA3BP,SAACP,GACfJ,IAAkBI,EAAIC,IACxBJ,EAAYG,GAyBiBQ,CAAYR,IAH7B,SAKGI,KAXEH,UAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC9CRd,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAEMd,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAMzE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYM,SAGlC,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,YAbc,SAACG,GAAD,OAClBY,EAAiBZ,EAAIC,WChBzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.83d4e8c4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onActiveTab: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onActiveTab,\n}) => {\n  const hendleClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onActiveTab(tab);\n    }\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map((tab) => {\n              const { id, title } = tab;\n\n              return (\n                <li\n                  key={id}\n                  className={classNames(\n                    { 'is-active': id === selectedTab.id },\n                  )}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => hendleClick(tab)}\n                  >\n                    {title}\n                  </a>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const onActiveTab = (tab : Tab) => (\n    setSelectedTabId(tab.id)\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onActiveTab={onActiveTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}