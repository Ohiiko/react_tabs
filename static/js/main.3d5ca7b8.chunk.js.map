{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onActiveTab","selectedTab","className","map","tab","id","title","classNames","href","onClick","hendleClick","content","App","useState","setSelectedTabId","find","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAQA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BAEIJ,EAAKK,KAAI,SAACC,GACR,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,oBAEEJ,UAAWK,IACT,CAAE,YAAaF,IAAOJ,EAAYI,KAEpC,UAAQ,MALV,SAOE,mBACEG,KAAI,WAAMH,GACV,UAAQ,UACRI,QAAS,kBAzBP,SAACL,GACfL,IAAkBK,EAAIC,IACxBL,EAAYI,GAuBiBM,CAAYN,IAH7B,SAKGE,KAXED,UAoBjB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYU,cC9CRb,EAAc,CACzB,CAAEO,GAAI,QAASC,MAAO,QAASK,QAAS,eACxC,CAAEN,GAAI,QAASC,MAAO,QAASK,QAAS,eACxC,CAAEN,GAAI,QAASC,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBe,EAAtB,KAEMb,EAAcH,EAAKiB,MAAK,SAACX,GAAD,OAASA,EAAIC,KAAON,MAAkBD,EAAK,GAMzE,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYK,SAGlC,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeA,EACfC,YAbc,SAACI,GAAD,OAClBU,EAAiBV,EAAIC,KAajBJ,YAAaA,QC7BrBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3d5ca7b8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onActiveTab: (tab: Tab) => void,\n  selectedTab: Tab,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onActiveTab,\n  selectedTab,\n}) => {\n  const hendleClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onActiveTab(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map((tab) => {\n              const { id, title } = tab;\n\n              return (\n                <li\n                  key={id}\n                  className={classNames(\n                    { 'is-active': id === selectedTab.id },\n                  )}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => hendleClick(tab)}\n                  >\n                    {title}\n                  </a>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const onActiveTab = (tab : Tab) => (\n    setSelectedTabId(tab.id)\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onActiveTab={onActiveTab}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}